// <auto-generated />
using System;
using LoanWorkflow.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanWorkflow.DAL.Migrations
{
    [DbContext(typeof(LoanWorkflowContext))]
    [Migration("20240308115037_addedPersonalInfosAndRelatedDatas")]
    partial class addedPersonalInfosAndRelatedDatas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanWorkflow.DAL.Configurations.ApplicantFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("FileId");

                    b.ToTable("ApplicantFiles", t =>
                        {
                            t.HasTrigger("ApplicantFiles_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Clients.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ActualAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DocIssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocIssuer")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("DocValidityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SecondPhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.ToTable("Clients", t =>
                        {
                            t.HasTrigger("Clients_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Clients.Income", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sphere")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.ToTable("Incomes", t =>
                        {
                            t.HasTrigger("Incomes_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.File.DocType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("DocTypes", t =>
                        {
                            t.HasTrigger("DocTypes_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Description = "Անձնագիր",
                            Name = "Անձնագիր"
                        },
                        new
                        {
                            Id = (short)2,
                            Description = "Սոցիալական քարտ",
                            Name = "Սոց․ քարտ"
                        },
                        new
                        {
                            Id = (short)3,
                            Description = "Նույնականացման քարտ",
                            Name = "Նույնականացման քարտ"
                        });
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.File.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<short>("DocTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("DocTypeId");

                    b.ToTable("Files", t =>
                        {
                            t.HasTrigger("Files_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.ToTable("Applicants", t =>
                        {
                            t.HasTrigger("Applicants_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.ApplicantPersonalInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonalInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("PersonalInfoId");

                    b.ToTable("ApplicantPersonalInfos", t =>
                        {
                            t.HasTrigger("ApplicantPersonalInfos_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.PersonalInfoBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.ToTable("PersonalInfoBase", t =>
                        {
                            t.HasTrigger("PersonalInfoBase_Trigger");
                        });

                    b
                        .UseTptMappingStrategy()
                        .HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", null, t =>
                        {
                            t.HasTrigger("Role_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", null, t =>
                        {
                            t.HasTrigger("RoleClaim_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("PasswordChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", null, t =>
                        {
                            t.HasTrigger("User_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", null, t =>
                        {
                            t.HasTrigger("UserClaim_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", null, t =>
                        {
                            t.HasTrigger("UserLogin_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", null, t =>
                        {
                            t.HasTrigger("UserRole_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserToken", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.HasIndex("Deleted")
                        .HasFilter("[Deleted] IS NULL");

                    b.ToTable("UserToken", null, t =>
                        {
                            t.HasTrigger("UserToken_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.AvvData", b =>
                {
                    b.HasBaseType("LoanWorkflow.DAL.Entities.PersonalInfo.PersonalInfoBase");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDead")
                        .HasColumnType("bit");

                    b.Property<string>("PublicServiceNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("SsnIndicator")
                        .HasColumnType("bit");

                    b.ToTable("AvvData", null, t =>
                        {
                            t.HasTrigger("AvvData_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Configurations.ApplicantFile", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.PersonalInfo.Applicant", "Applicant")
                        .WithMany("ApplicantFiles")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanWorkflow.DAL.Entities.File.File", "File")
                        .WithMany("ApplicantFiles")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("File");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Clients.Income", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.Clients.Client", "Client")
                        .WithMany("Incomes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.File.File", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.File.DocType", "DocType")
                        .WithMany("Files")
                        .HasForeignKey("DocTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocType");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.Applicant", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.Clients.Client", "Client")
                        .WithMany("Applicants")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.ApplicantPersonalInfo", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.PersonalInfo.Applicant", "Applicant")
                        .WithMany("ApplicantPersonalInfos")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanWorkflow.DAL.Entities.PersonalInfo.PersonalInfoBase", "PersonalInfo")
                        .WithMany("ApplicantPersonalInfos")
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("PersonalInfo");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.RoleClaim", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.Users.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserClaim", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserLogin", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserRole", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.Users.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanWorkflow.DAL.Entities.Users.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.UserToken", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.AvvData", b =>
                {
                    b.HasOne("LoanWorkflow.DAL.Entities.PersonalInfo.PersonalInfoBase", null)
                        .WithOne()
                        .HasForeignKey("LoanWorkflow.DAL.Entities.PersonalInfo.AvvData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("LoanWorkflow.DAL.Entities.PersonalInfo.AvvAddress", "AvvAddresses", b1 =>
                        {
                            b1.Property<Guid>("AvvDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.HasKey("AvvDataId", "Id");

                            b1.ToTable("AvvAddresses", null, t =>
                                {
                                    t.HasTrigger("AvvAddresses_Trigger");
                                });

                            b1.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                            b1.WithOwner()
                                .HasForeignKey("AvvDataId");

                            b1.OwnsOne("LoanWorkflow.DAL.Entities.PersonalInfo.RegistrationAddress", "RegistrationAddress", b2 =>
                                {
                                    b2.Property<Guid>("AvvAddressAvvDataId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("AvvAddressId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Apartment")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<string>("Building")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<string>("BuildingType")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<string>("Community")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("LocationCode")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<string>("PostalIndex")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<string>("Region")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("Residence")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("Street")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.HasKey("AvvAddressAvvDataId", "AvvAddressId");

                                    b2.ToTable("AvvRegistrationAddresses", null, t =>
                                        {
                                            t.HasTrigger("AvvRegistrationAddresses_Trigger");
                                        });

                                    b2.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                                    b2.WithOwner()
                                        .HasForeignKey("AvvAddressAvvDataId", "AvvAddressId");
                                });

                            b1.OwnsOne("LoanWorkflow.DAL.Entities.PersonalInfo.RegistrationData", "RegistrationData", b2 =>
                                {
                                    b2.Property<Guid>("AvvAddressAvvDataId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("AvvAddressId")
                                        .HasColumnType("int");

                                    b2.Property<DateTime?>("RegisteredDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("RegisteredDepartment")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<DateTime?>("RegistrationDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("RegistrationDepartment")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<string>("RegistrationStatus")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<string>("RegistrationType")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<DateTime?>("TemporaryRegistrationDate")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("AvvAddressAvvDataId", "AvvAddressId");

                                    b2.ToTable("AvvRegistrationData", null, t =>
                                        {
                                            t.HasTrigger("AvvRegistrationData_Trigger");
                                        });

                                    b2.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                                    b2.WithOwner()
                                        .HasForeignKey("AvvAddressAvvDataId", "AvvAddressId");
                                });

                            b1.OwnsOne("LoanWorkflow.DAL.Entities.PersonalInfo.ResidenceDocument", "ResidenceDocument", b2 =>
                                {
                                    b2.Property<Guid>("AvvAddressAvvDataId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("AvvAddressId")
                                        .HasColumnType("int");

                                    b2.Property<string>("DocumentDepartment")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("DocumentNumber")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("DocumentType")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("DocumentValidityDate")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<DateTime?>("ResidenceDocumentDate")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("AvvAddressAvvDataId", "AvvAddressId");

                                    b2.ToTable("AvvResidenceDocuments", null, t =>
                                        {
                                            t.HasTrigger("AvvResidenceDocuments_Trigger");
                                        });

                                    b2.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                                    b2.WithOwner()
                                        .HasForeignKey("AvvAddressAvvDataId", "AvvAddressId");
                                });

                            b1.Navigation("RegistrationAddress")
                                .IsRequired();

                            b1.Navigation("RegistrationData")
                                .IsRequired();

                            b1.Navigation("ResidenceDocument")
                                .IsRequired();
                        });

                    b.OwnsMany("LoanWorkflow.DAL.Entities.PersonalInfo.AvvDocument", "AvvDocuments", b1 =>
                        {
                            b1.Property<Guid>("AvvDataId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("DocumentDepartment")
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("DocumentNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("DocumentStatus")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("DocumentType")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("OtherDocumentType")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("PhotoPath")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("AvvDataId", "Id");

                            b1.ToTable("AvvDocuments", null, t =>
                                {
                                    t.HasTrigger("AvvDocuments_Trigger");
                                });

                            b1.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                            b1.WithOwner()
                                .HasForeignKey("AvvDataId");

                            b1.OwnsOne("LoanWorkflow.DAL.Entities.PersonalInfo.AvvPerson", "Person", b2 =>
                                {
                                    b2.Property<Guid>("AvvDocumentAvvDataId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("AvvDocumentId")
                                        .HasColumnType("int");

                                    b2.Property<string>("BirthAddress")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("BirthCommunity")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("BirthCountryCode")
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.Property<string>("BirthCountryName")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("BirthCountryShortName")
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.Property<DateTime?>("BirthDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("BirthRegion")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("BirthResidence")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("EnglishFirstName")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("EnglishLastName")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("EnglishPatronymicName")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("FirstName")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("Genus")
                                        .HasMaxLength(1)
                                        .HasColumnType("nvarchar(1)");

                                    b2.Property<string>("LastName")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("NationalityCode")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.Property<string>("NationalityName")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("PatronymicName")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.HasKey("AvvDocumentAvvDataId", "AvvDocumentId");

                                    b2.ToTable("AvvPersons", null, t =>
                                        {
                                            t.HasTrigger("AvvPersons_Trigger");
                                        });

                                    b2.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                                    b2.WithOwner()
                                        .HasForeignKey("AvvDocumentAvvDataId", "AvvDocumentId");

                                    b2.OwnsMany("LoanWorkflow.DAL.Entities.PersonalInfo.Citizenship", "Citizenships", b3 =>
                                        {
                                            b3.Property<Guid>("AvvPersonAvvDocumentAvvDataId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<int>("AvvPersonAvvDocumentId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<DateTime?>("CitizenshipStoppedDate")
                                                .HasColumnType("datetime2");

                                            b3.Property<string>("CountryCode")
                                                .HasMaxLength(3)
                                                .HasColumnType("nvarchar(3)");

                                            b3.Property<string>("CountryName")
                                                .HasMaxLength(100)
                                                .HasColumnType("nvarchar(100)");

                                            b3.Property<string>("CountryShortName")
                                                .HasMaxLength(100)
                                                .HasColumnType("nvarchar(100)");

                                            b3.HasKey("AvvPersonAvvDocumentAvvDataId", "AvvPersonAvvDocumentId", "Id");

                                            b3.ToTable("AvvCitizenships", null, t =>
                                                {
                                                    t.HasTrigger("AvvCitizenships_Trigger");
                                                });

                                            b3.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                                            b3.WithOwner()
                                                .HasForeignKey("AvvPersonAvvDocumentAvvDataId", "AvvPersonAvvDocumentId");
                                        });

                                    b2.Navigation("Citizenships");
                                });

                            b1.OwnsOne("LoanWorkflow.DAL.Entities.PersonalInfo.BasicDocument", "BasicDocument", b2 =>
                                {
                                    b2.Property<Guid>("AvvDocumentAvvDataId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("AvvDocumentId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Code")
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.Property<string>("CountryCode")
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.Property<string>("CountryName")
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("CountryShortName")
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)");

                                    b2.Property<string>("Name")
                                        .HasMaxLength(30)
                                        .HasColumnType("nvarchar(30)");

                                    b2.Property<string>("Number")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)");

                                    b2.HasKey("AvvDocumentAvvDataId", "AvvDocumentId");

                                    b2.ToTable("AvvBasicDocuments", null, t =>
                                        {
                                            t.HasTrigger("AvvBasicDocuments_Trigger");
                                        });

                                    b2.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                                    b2.WithOwner()
                                        .HasForeignKey("AvvDocumentAvvDataId", "AvvDocumentId");
                                });

                            b1.OwnsOne("LoanWorkflow.DAL.Entities.PersonalInfo.PassportData", "PassportData", b2 =>
                                {
                                    b2.Property<Guid>("AvvDocumentAvvDataId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("AvvDocumentId")
                                        .HasColumnType("int");

                                    b2.Property<DateTime?>("ExtensionDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("ExtensionDepartment")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<DateTime?>("ForeignValidityDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime?>("IssuanceDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<DateTime?>("RelatedDocumentDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("RelatedDocumentDepartment")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("RelatedDocumentNumber")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("Type")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.Property<DateTime?>("ValidityDate")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("AvvDocumentAvvDataId", "AvvDocumentId");

                                    b2.ToTable("AvvDocuments", null, t =>
                                        {
                                            t.HasTrigger("AvvDocuments_Trigger");
                                        });

                                    b2.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                                    b2.WithOwner()
                                        .HasForeignKey("AvvDocumentAvvDataId", "AvvDocumentId");
                                });

                            b1.Navigation("BasicDocument")
                                .IsRequired();

                            b1.Navigation("PassportData")
                                .IsRequired();

                            b1.Navigation("Person")
                                .IsRequired();
                        });

                    b.Navigation("AvvAddresses");

                    b.Navigation("AvvDocuments");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Clients.Client", b =>
                {
                    b.Navigation("Applicants");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.File.DocType", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.File.File", b =>
                {
                    b.Navigation("ApplicantFiles");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.Applicant", b =>
                {
                    b.Navigation("ApplicantFiles");

                    b.Navigation("ApplicantPersonalInfos");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.PersonalInfo.PersonalInfoBase", b =>
                {
                    b.Navigation("ApplicantPersonalInfos");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("LoanWorkflow.DAL.Entities.Users.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
